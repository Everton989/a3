package com.mycompany.a3;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author evert
 */
public class TelaDash extends javax.swing.JFrame {

    /**
     * Creates new form TelaDash
     */
    public TelaDash() {
        initComponents();
        loadUserData();
}
private void loadDataFromDatabase() {
    String url = "jdbc:mysql://localhost:3306/biblioteca";
        String user = "root"; 
        String password = "EvertonLopes007@";

        String[] columnNames = {"ID", "Nome", "Email", "Usuario", "Administrador"};
        DefaultTableModel model = new DefaultTableModel(columnNames, 0);

        try {
            Connection connection = DriverManager.getConnection(url, user, password);
            String sql = "SELECT id, nome, email, usuario, isAdmin FROM usuarios";
            Statement statement = connection.createStatement();
            ResultSet resultSet = statement.executeQuery(sql);

            while (resultSet.next()) {
                int id = resultSet.getInt("id");
                String nome = resultSet.getString("nome");
                String email = resultSet.getString("email");
                String usuario = resultSet.getString("usuario");
                boolean isAdmin = resultSet.getBoolean("isAdmin");

                Object[] row = {id, nome, email, usuario, isAdmin};
                model.addRow(row);
            }

            tabela.setModel(model);
            connection.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao carregar dados do usu치rio!");
        }
}


private void loadUserData() {
        String url = "jdbc:mysql://localhost:3306/biblioteca";
    String user = "root";
    String password = "EvertonLopes007@";

    String[] columnNames = {"Nome", "Email", "Usuario", "Administrador"};
    NonEditableTableModel model = new NonEditableTableModel(columnNames, 0);

    try {
        Connection connection = DriverManager.getConnection(url, user, password);
        String sql = "SELECT nome, email, usuario, isAdmin FROM usuarios";
        Statement statement = connection.createStatement();
        ResultSet resultSet = statement.executeQuery(sql);

        while (resultSet.next()) {
            String nome = resultSet.getString("nome");
            String email = resultSet.getString("email");
            String usuario = resultSet.getString("usuario");
            boolean isAdmin = resultSet.getBoolean("isAdmin");

            Object[] row = {nome, email, usuario, isAdmin};
            model.addRow(row);
        }

        tabela.setModel(model);
        connection.close();
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Erro ao carregar dados do usu치rio!");
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtnome = new javax.swing.JTextField();
        txtemail = new javax.swing.JTextField();
        txtusuario = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        btnCriar = new javax.swing.JButton();
        btnAlterar = new javax.swing.JButton();
        btnApagar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtsenha = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Nome", "Email", "Usuario", "Administrador", "ID"
            }
        ));
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 173, 583, 192);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nome");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(40, 20, 37, 16);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Email");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(40, 70, 37, 16);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Usuario");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(40, 120, 48, 16);

        txtnome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnomeActionPerformed(evt);
            }
        });
        getContentPane().add(txtnome);
        txtnome.setBounds(40, 40, 110, 20);
        getContentPane().add(txtemail);
        txtemail.setBounds(40, 90, 110, 20);
        getContentPane().add(txtusuario);
        txtusuario.setBounds(40, 140, 110, 20);

        jRadioButton1.setForeground(new java.awt.Color(255, 255, 255));
        jRadioButton1.setText("Administrador");
        getContentPane().add(jRadioButton1);
        jRadioButton1.setBounds(240, 40, 110, 21);

        btnCriar.setText("Criar");
        btnCriar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCriarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCriar);
        btnCriar.setBounds(456, 28, 72, 23);

        btnAlterar.setText("Alterar");
        btnAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarActionPerformed(evt);
            }
        });
        getContentPane().add(btnAlterar);
        btnAlterar.setBounds(456, 85, 72, 23);

        btnApagar.setText("Deletar");
        btnApagar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApagarActionPerformed(evt);
            }
        });
        getContentPane().add(btnApagar);
        btnApagar.setBounds(456, 142, 72, 23);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Senha");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(240, 70, 37, 16);
        getContentPane().add(txtsenha);
        txtsenha.setBounds(240, 90, 110, 22);

        jLabel5.setIcon(new javax.swing.ImageIcon("C:\\Users\\evert\\Downloads\\fundo.jpeg")); // NOI18N
        jLabel5.setText("jLabel5");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(-3, -4, 580, 370);

        setSize(new java.awt.Dimension(591, 372));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
        int selectedRow = tabela.getSelectedRow();
        if (selectedRow >= 0) {
            // Carrega os valores da linha selecionada nos campos de texto
            txtnome.setText(tabela.getValueAt(selectedRow, 0).toString());
            txtemail.setText(tabela.getValueAt(selectedRow, 1).toString());
            txtusuario.setText(tabela.getValueAt(selectedRow, 2).toString());
            boolean isAdmin = Boolean.parseBoolean(tabela.getValueAt(selectedRow, 3).toString());
            jRadioButton1.setSelected(isAdmin);
        }
    }//GEN-LAST:event_tabelaMouseClicked

    
    private void btnCriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCriarActionPerformed
       String nome = txtnome.getText();
        String email = txtemail.getText();
        String usuario = txtusuario.getText();
        String senha = new String(txtsenha.getPassword());
        boolean isAdmin = jRadioButton1.isSelected();

        String url = "jdbc:mysql://localhost:3306/biblioteca";
        String user = "root";
        String password = "EvertonLopes007@";

        try {
            Connection connection = DriverManager.getConnection(url, user, password);
            String sql = "INSERT INTO usuarios (nome, email, usuario, senha, isAdmin) VALUES (?, ?, ?, ?, ?)";
            PreparedStatement preparedStatement = connection.prepareStatement(sql);
            preparedStatement.setString(1, nome);
            preparedStatement.setString(2, email);
            preparedStatement.setString(3, usuario);
            preparedStatement.setString(4, senha);
            preparedStatement.setBoolean(5, isAdmin);
            preparedStatement.executeUpdate();

            connection.close();
            JOptionPane.showMessageDialog(this, "Usu치rio criado com sucesso!");
            loadUserData();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao criar usu치rio!");
        }
            }//GEN-LAST:event_btnCriarActionPerformed

    private void btnAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarActionPerformed
    int selectedRow = tabela.getSelectedRow();
        if (selectedRow >= 0) {
            String nome = txtnome.getText();
            String email = txtemail.getText();
            String usuario = txtusuario.getText();
            String senha = new String(txtsenha.getPassword());
            boolean isAdmin = jRadioButton1.isSelected();

            String url = "jdbc:mysql://localhost:3306/biblioteca";
            String user = "root";
            String password = "EvertonLopes007@";

            try {
                Connection connection = DriverManager.getConnection(url, user, password);
                String sql = "UPDATE usuarios SET nome=?, email=?, senha=?, isAdmin=? WHERE usuario=?";
                PreparedStatement preparedStatement = connection.prepareStatement(sql);
                preparedStatement.setString(1, nome);
                preparedStatement.setString(2, email);
                preparedStatement.setString(3, senha);
                preparedStatement.setBoolean(4, isAdmin);
                preparedStatement.setString(5, usuario);
                preparedStatement.executeUpdate();

                connection.close();
                JOptionPane.showMessageDialog(this, "Usu치rio atualizado com sucesso!");
                loadUserData();
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Erro ao atualizar usu치rio!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um usu치rio para atualizar!");
        }
    }//GEN-LAST:event_btnAlterarActionPerformed

    private void btnApagarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApagarActionPerformed
               int selectedRow = tabela.getSelectedRow();
        if (selectedRow >= 0) {
            String usuario = txtusuario.getText();

            String url = "jdbc:mysql://localhost:3306/biblioteca";
            String user = "root";
            String password = "EvertonLopes007@";

            try {
                Connection connection = DriverManager.getConnection(url, user, password);
                String sql = "DELETE FROM usuarios WHERE usuario=?";
                PreparedStatement preparedStatement = connection.prepareStatement(sql);
                preparedStatement.setString(1, usuario);
                preparedStatement.executeUpdate();

                connection.close();
                JOptionPane.showMessageDialog(this, "Usu치rio deletado com sucesso!");
                loadUserData();
            } catch (SQLException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(this, "Erro ao deletar usu치rio!");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um usu치rio para deletar!");
        }
    }//GEN-LAST:event_btnApagarActionPerformed

    private void txtnomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnomeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaDash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaDash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaDash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaDash.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaDash().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterar;
    private javax.swing.JButton btnApagar;
    private javax.swing.JButton btnCriar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabela;
    private javax.swing.JTextField txtemail;
    private javax.swing.JTextField txtnome;
    private javax.swing.JPasswordField txtsenha;
    private javax.swing.JTextField txtusuario;
    // End of variables declaration//GEN-END:variables

    public class NonEditableTableModel extends DefaultTableModel {
    public NonEditableTableModel(Object[] columnNames, int rowCount) {
        super(columnNames, rowCount);
    }

    @Override
    public boolean isCellEditable(int row, int column) {
        return false; // Todas as c칠lulas n칚o s칚o edit치veis
    }
}
}